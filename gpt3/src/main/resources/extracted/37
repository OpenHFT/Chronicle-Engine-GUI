.1. Acknowledged Replication
Queue replication can optionally be configured for each sink instance to send an acknowledgement for each message back to the source, which in turn enables the source to keep track of the highest message which has been replicated to at least one other node.In the event of a network outage there can be no guarantee that any in-flight (unacknowledged) message has been delivered/handled by a sink, so the gap between the last sent and last acknowledged index represents the largest number of messages which could potentially be lost.
User-defined strategies can be used to control this number of "potentially losable" messages, with smaller permitted gaps coming at the cost of higher net latencies as the source message rate will be increasingly sensitive to the network round-trip for acknowledgements.
See a runnable example of processing events after acknowledged replication in Chronicle-Services-Demo/Replication/Example2.
2.1.1. Replication and Replay Strategy
Chronicle Services can ensure that an output message is not written to the output queue until the replication acknowledgment for the corresponding input message has been received. This is important if you are using the output queue to determine replay order (Replay Strategies) and both input and output queues are replicated. If this is the case and an input queue message was not replicated before a failure, but the corresponding output message was, the services framework may not be able to restart the service.
For more information about enabling this feature and other options, see Startup Strategies and Replay Strategies.