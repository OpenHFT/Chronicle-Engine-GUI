Service Diagram Tool
Chronicleâ€™s Services Diagram tool enables users to quickly generate an image that effectively communicates how services are connected. This guide demonstrates how to easily generate a graphical representation of how Chronicle Services integrate with one another.
An example of such a graphical representation is depicted below:
550
Figure 1. Example of Image Generated by Services Diagram Tool
1. Using the Tool
Watch the video tutorial of using this tool below:

Find the Services Diagram Tool on https://services-diagram.chronicle.software. Upon loading the Services Diagram tool, these steps should be followed:
Select "Choose file" and ensure that a JAR file with at least one valid Yaml configuration file (eg services.yaml) file is uploaded.
If the JAR file contains just one valid Yaml configuration file, an image (png) will be automatically generated.
If the JAR file contains more than one valid configuration files, an image of the first configuration file will be automatically generated, and a dropdown menu will appear to choose a different configuration file.
Upon selection of a different configuration file, the previous image will be removed from the screen and the new generated image will appear.
The JAR file must contain all the class files used by the services diagram as it uses reflection on the method signatures to build up the diagram, and as such, all Java classes within the jar must be correctly compiled and able to work with Chronicle Services. In other words, the services diagram is a tool that is best used to render a previously written working Chronicle Services project, rather than a new incomplete project. Having said this, it can be used to render a skeleton project as long as all the interface and method signatures used by the Chronicle Services yaml config file are first established, even if they are perhaps mocked out.
If a JAR file is not uploaded, or if the JAR file uploaded does not contain any valid configuration files, an error message will be printed to the screen.
550
Figure 2. Example of dropdown if JAR file contains several configuration files