"Problem": "You want to examine the latencies introduced at each stage of an application.",
"Solution": "Use the built-in ChronicleHistoryReader.",
"Discussion": "Sometimes it is useful to know how long a message takes to pass through the various stages of a Chronicle Services application. The MessageHistory posted to queues alongside messages carries timestamps that allow this to be calculated, and the ChronicleHistoryReaderMain application, which is part of the Chronicle Queue library, allows these to be processed into a histogram of latencies for each stage of the target application.",
"Command": "java -cp <classpath containing all dependencies> software.chronicle.services.tools.ChronicleHistoryReaderMain -d target/data/transactionOut -s services.yaml",
"Arguments": "We need to specify the path to the Chronicle Queue that contains the messages we want to check, and the service configuration file. Various command line arguments allow more flexibility over what information is displayed (for example displaying timings on a per method basis rather than per service), and the units used (for example microseconds rather than the default of nanoseconds).",
"Output": "The output shows a histogram of latencies for each stage of the target application. The leftmost column represents percentiles of the messages, the other columns contain the latencies at each of these percentiles for each stage of the application: transactionUpstream, transactionUpstreamTotransactionSvc, transactionSvc, and endToEnd. The output can also be generated in csv format, allowing the results to be imported into a spreadsheet for further analysis."
