package topicsubscriptionrepro;

import net.openhft.chronicle.engine.server.ServerEndpoint;
import net.openhft.chronicle.engine.tree.VanillaAssetTree;

import java.io.IOException;
import java.util.*;

/**
 * This class mimics the server side market data updates that occur in Data Manager. It was
 * originally written to highlight an issue whereby updates from server side (1.12.27-SNAPSHOT) were
 * no longer being received after a couple of minutes.
 */
public class MimicMarketDataServerSideUpdates {
    private static VanillaAssetTree _assetTree;
    private static ServerEndpoint _serverEndpoint;
    private static Random _random = new Random();


    /**
     * Entry point
     *
     * @param args
     */
    public static void main(String[] args) throws InterruptedException, IOException {
        final int port = 5799;
        final String assetTreeErrorMessage = "Error occurred in VanillaAssetTree: ";
        _assetTree = new VanillaAssetTree().forServer(false);
        _serverEndpoint = new ServerEndpoint("*:" + port, _assetTree);
        Map<String, String> marketDataMap = _assetTree.acquireMap("/adept/marketdata", String.class, String.class);
        initializeMarketMap(marketDataMap);

        List<String> keys = new ArrayList<>(marketDataMap.keySet());
        Set<String> values = new HashSet<>();
        initializeValues(values);
        List<String> valueList = new ArrayList<>(values);

        // Randomly update values every 300ms from set of values
        while (true) {
            randomUpdate(keys, marketDataMap, valueList);
            Thread.sleep(300);
        }

    }


    /**
     * Set up initial value simply with "d1.0" (no meaning to value)
     *
     * @param marketDataMap
     */
    public static void initializeMarketMap(Map<String, String> marketDataMap) {
        marketDataMap.put("9|USD SB LCH 15Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 15Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB LCH 15Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 14Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 14Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB LCH 14Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 13Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 13Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB LCH 13Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 12Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 12Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB LCH 12Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 11Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 11Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB LCH 11Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 10Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 10Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB LCH 10Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 9Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 9Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB LCH 9Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 40Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 40Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB LCH 40Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 8Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 8Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB LCH 8Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 7Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 7Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB LCH 7Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 6Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 6Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB LCH 6Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 5Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 5Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB LCH 5Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 4Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 4Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB LCH 4Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 3Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 3Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB LCH 3Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 2Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 2Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB LCH 2Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 1Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 1Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB LCH 1Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 30Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 30Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB LCH 30Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 25Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 25Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB LCH 25Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 20Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 20Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB LCH 20Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 50Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 50Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB LCH 50Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 15Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 15Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD AM LCH 15Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 14Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 14Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD AM LCH 14Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 13Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 13Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD AM LCH 13Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 12Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 12Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD AM LCH 12Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 11Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 11Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD AM LCH 11Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 10Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 10Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD AM LCH 10Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 9Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 9Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD AM LCH 9Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 40Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 40Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD AM LCH 40Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 8Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 8Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD AM LCH 8Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 7Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 7Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD AM LCH 7Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 6Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 6Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD AM LCH 6Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 5Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 5Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD AM LCH 5Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 4Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 4Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD AM LCH 4Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 3Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 3Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD AM LCH 3Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 2Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 2Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD AM LCH 2Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 1Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 1Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD AM LCH 1Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 30Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 30Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD AM LCH 30Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 25Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 25Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD AM LCH 25Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 20Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 20Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD AM LCH 20Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 50Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 50Y|5|30|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD AM LCH 50Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 3M|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1M3M 3M|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 3M|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 6M|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1M3M 6M|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 6M|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 9M|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1M3M 9M|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 9M|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 1Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1M3M 1Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 1Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 18M|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1M3M 18M|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 18M|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 2Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1M3M 2Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 2Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 3Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1M3M 3Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 3Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 4Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1M3M 4Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 4Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 5Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1M3M 5Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 5Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 6Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1M3M 6Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 6Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 7Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1M3M 7Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 7Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 8Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1M3M 8Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 8Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 9Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1M3M 9Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 9Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 10Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1M3M 10Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 10Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 12Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1M3M 12Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 12Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 15Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1M3M 15Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 15Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 20Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1M3M 20Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 20Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 25Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1M3M 25Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 25Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 30Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1M3M 30Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M3M 30Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 1Y|5|17|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 1Y|5|14|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 1Y|5|33|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 1Y|5|11|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 1Y|5|13|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB LCH 1Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 2Y|5|17|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 2Y|5|14|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 2Y|5|33|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 2Y|5|11|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 2Y|5|13|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB LCH 2Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 3Y|5|17|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 3Y|5|14|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 3Y|5|33|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 3Y|5|11|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 3Y|5|13|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB LCH 3Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 4Y|5|17|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 4Y|5|14|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 4Y|5|33|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 4Y|5|11|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 4Y|5|13|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB LCH 4Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 5Y|5|17|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 5Y|5|14|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 5Y|5|33|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 5Y|5|11|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 5Y|5|13|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB LCH 5Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 6Y|5|17|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 6Y|5|14|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 6Y|5|33|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 6Y|5|11|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 6Y|5|13|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB LCH 6Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 7Y|5|17|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 7Y|5|14|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 7Y|5|33|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 7Y|5|11|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 7Y|5|13|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB LCH 7Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 8Y|5|17|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 8Y|5|14|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 8Y|5|33|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 8Y|5|11|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 8Y|5|13|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB LCH 8Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 9Y|5|17|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 9Y|5|14|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 9Y|5|33|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 9Y|5|11|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 9Y|5|13|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB LCH 9Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 10Y|5|17|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 10Y|5|14|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 10Y|5|33|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 10Y|5|11|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 10Y|5|13|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB LCH 10Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 11Y|5|17|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 11Y|5|14|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 11Y|5|33|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 11Y|5|11|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 11Y|5|13|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB LCH 11Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 12Y|5|17|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 12Y|5|14|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 12Y|5|33|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 12Y|5|11|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 12Y|5|13|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB LCH 12Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 13Y|5|17|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 13Y|5|14|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 13Y|5|33|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 13Y|5|11|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 13Y|5|13|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB LCH 13Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 14Y|5|17|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 14Y|5|14|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 14Y|5|33|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 14Y|5|11|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 14Y|5|13|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB LCH 14Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 15Y|5|17|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 15Y|5|14|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 15Y|5|33|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 15Y|5|11|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 15Y|5|13|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB LCH 15Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 20Y|5|17|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 20Y|5|14|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 20Y|5|33|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 20Y|5|11|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 20Y|5|13|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB LCH 20Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 25Y|5|17|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 25Y|5|14|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 25Y|5|33|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 25Y|5|11|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 25Y|5|13|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB LCH 25Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 30Y|5|17|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 30Y|5|14|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 30Y|5|33|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 30Y|5|11|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 30Y|5|13|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB LCH 30Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 40Y|5|17|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 40Y|5|14|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 40Y|5|33|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 40Y|5|11|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 40Y|5|13|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB LCH 40Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 50Y|5|17|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 50Y|5|14|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 50Y|5|33|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 50Y|5|11|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCH 50Y|5|13|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB LCH 50Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 1Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 1Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 1Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 1Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 1Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 1Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 1Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 2Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 2Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 2Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 2Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 2Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 2Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 2Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 3Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 3Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 3Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 3Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 3Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 3Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 3Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 4Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 4Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 4Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 4Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 4Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 4Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 4Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 5Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 5Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 5Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 5Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 5Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 5Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 5Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 6Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 6Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 6Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 6Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 6Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 6Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 6Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 7Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 7Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 7Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 7Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 7Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 7Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 7Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 8Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 8Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 8Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 8Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 8Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 8Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 8Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 9Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 9Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 9Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 9Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 9Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 9Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 9Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 10Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 10Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 10Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 10Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 10Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 10Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 10Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 11Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 11Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 11Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 11Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 11Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 11Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 11Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 12Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 12Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 12Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 12Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 12Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 12Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 12Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 13Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 13Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 13Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 13Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 13Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 13Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 13Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 14Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 14Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 14Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 14Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 14Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 14Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 14Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 15Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 15Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 15Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 15Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 15Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 15Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 15Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 20Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 20Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 20Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 20Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 20Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 20Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 20Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 25Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 25Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 25Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 25Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 25Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 25Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 25Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 30Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 30Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 30Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 30Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 30Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 30Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 30Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 40Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 40Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 40Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 40Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 40Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 40Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 40Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 50Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 50Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 50Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 50Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 50Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 50Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 50Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB LCH 1Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB LCH 1Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB LCH 1Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB LCH 1Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB LCH 2Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB LCH 2Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB LCH 2Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB LCH 2Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB LCH 3Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB LCH 3Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB LCH 3Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB LCH 3Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB LCH 4Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB LCH 4Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB LCH 4Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB LCH 4Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB LCH 5Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB LCH 5Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB LCH 5Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB LCH 5Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB LCH 6Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB LCH 6Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB LCH 6Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB LCH 6Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB LCH 7Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB LCH 7Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB LCH 7Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB LCH 7Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB LCH 8Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB LCH 8Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB LCH 8Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB LCH 8Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB LCH 9Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB LCH 9Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB LCH 9Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB LCH 9Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB LCH 10Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB LCH 10Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB LCH 10Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB LCH 10Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB LCH 11Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB LCH 11Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB LCH 11Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB LCH 11Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB LCH 12Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB LCH 12Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB LCH 12Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB LCH 12Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB LCH 13Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB LCH 13Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB LCH 13Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB LCH 13Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB LCH 14Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB LCH 14Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB LCH 14Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB LCH 14Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB LCH 15Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB LCH 15Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB LCH 15Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB LCH 15Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB LCH 20Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB LCH 20Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB LCH 20Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB LCH 20Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB LCH 25Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB LCH 25Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB LCH 25Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB LCH 25Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB LCH 30Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB LCH 30Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB LCH 30Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB LCH 30Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB LCH 40Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB LCH 40Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB LCH 40Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB LCH 40Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB LCH 50Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB LCH 50Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB LCH 50Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB LCH 50Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|TRY 2Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|TRY 2Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("30|TRY 2Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("84|TRY 2Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 2Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 2Y SB LCH|6|18|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SO 2Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|TRY 3Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|TRY 3Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("30|TRY 3Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("84|TRY 3Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 3Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 3Y SB LCH|6|18|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SO 3Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|TRY 4Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|TRY 4Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("30|TRY 4Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("84|TRY 4Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 4Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 4Y SB LCH|6|18|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SO 4Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|TRY 5Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|TRY 5Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("30|TRY 5Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("84|TRY 5Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 5Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 5Y SB LCH|6|18|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SO 5Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|TRY 6Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|TRY 6Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("30|TRY 6Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("84|TRY 6Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 6Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 6Y SB LCH|6|18|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SO 6Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|TRY 7Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|TRY 7Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("30|TRY 7Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("84|TRY 7Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 7Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 7Y SB LCH|6|18|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SO 7Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|TRY 8Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|TRY 8Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("30|TRY 8Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("84|TRY 8Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 8Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 8Y SB LCH|6|18|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SO 8Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|TRY 9Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|TRY 9Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("30|TRY 9Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("84|TRY 9Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 9Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 9Y SB LCH|6|18|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SO 9Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|TRY 10Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|TRY 10Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("30|TRY 10Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("84|TRY 10Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 10Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 10Y SB LCH|6|18|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SO 10Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|TRY 11Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|TRY 11Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("30|TRY 11Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("84|TRY 11Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 11Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 11Y SB LCH|6|18|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SO 11Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|TRY 12Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|TRY 12Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("30|TRY 12Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("84|TRY 12Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 12Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 12Y SB LCH|6|18|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SO 12Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|TRY 13Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|TRY 13Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("30|TRY 13Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("84|TRY 13Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 13Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 13Y SB LCH|6|18|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SO 13Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|TRY 14Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|TRY 14Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("30|TRY 14Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("84|TRY 14Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 14Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 14Y SB LCH|6|18|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SO 14Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|TRY 15Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|TRY 15Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("30|TRY 15Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("84|TRY 15Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 15Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 15Y SB LCH|6|18|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SO 15Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|TRY 20Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|TRY 20Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("30|TRY 20Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("84|TRY 20Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 20Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 20Y SB LCH|6|18|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SO 20Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|TRY 25Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|TRY 25Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("30|TRY 25Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("84|TRY 25Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 25Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 25Y SB LCH|6|18|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SO 25Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|TRY 30Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|TRY 30Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("30|TRY 30Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("84|TRY 30Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 30Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 30Y SB LCH|6|18|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SO 30Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|TRY 40Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|TRY 40Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("30|TRY 40Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("84|TRY 40Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 40Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 40Y SB LCH|6|18|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SO 40Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|TRY 50Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|TRY 50Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("30|TRY 50Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("84|TRY 50Y|4|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 50Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SO 50Y SB LCH|6|18|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SO 50Y SB LCH|6|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCH 1Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCH 2Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCH 3Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCH 4Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCH 5Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCH 6Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCH 7Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCH 8Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCH 9Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCH 10Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCH 11Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCH 12Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCH 13Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCH 14Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCH 15Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCH 20Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCH 25Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCH 30Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCH 40Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCH 50Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 1Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD AM LCH 1Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM CME 1Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 2Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD AM LCH 2Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM CME 2Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 3Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD AM LCH 3Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM CME 3Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 4Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD AM LCH 4Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM CME 4Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 5Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD AM LCH 5Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM CME 5Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 6Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD AM LCH 6Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM CME 6Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 7Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD AM LCH 7Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM CME 7Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 8Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD AM LCH 8Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM CME 8Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 9Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD AM LCH 9Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM CME 9Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 10Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD AM LCH 10Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM CME 10Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 11Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD AM LCH 11Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM CME 11Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 12Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD AM LCH 12Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM CME 12Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 13Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD AM LCH 13Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM CME 13Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 14Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD AM LCH 14Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM CME 14Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 15Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD AM LCH 15Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM CME 15Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 20Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD AM LCH 20Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM CME 20Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 25Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD AM LCH 25Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM CME 25Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 30Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD AM LCH 30Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM CME 30Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 40Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD AM LCH 40Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM CME 40Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM LCH 50Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD AM LCH 50Y|5|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD AM CME 50Y|5|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD LIB ON|1|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD LIB ON|1|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD LIB 1W|1|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD LIB 1W|1|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD LIB 1M|1|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD LIB 1M|1|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD LIB 2M|1|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD LIB 2M|1|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD LIB 3M|1|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD LIB 3M|1|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD LIB 6M|1|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD LIB 6M|1|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD LIB 12M|1|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD LIB 12M|1|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|FED FUNDS|1|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|FED FUNDS|1|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 6M|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 3M6M 6M|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 6M|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 1Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 3M6M 1Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 1Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 18M|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 3M6M 18M|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 18M|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 2Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 3M6M 2Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 2Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 3Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 3M6M 3Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 3Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 4Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 3M6M 4Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 4Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 5Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 3M6M 5Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 5Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 6Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 3M6M 6Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 6Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 7Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 3M6M 7Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 7Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 8Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 3M6M 8Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 8Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 9Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 3M6M 9Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 9Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 10Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 3M6M 10Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 10Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 12Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 3M6M 12Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 12Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 15Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 3M6M 15Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 15Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 20Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 3M6M 20Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 20Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 25Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 3M6M 25Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 25Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 30Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 3M6M 30Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M6M 30Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 3M|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD OIS3M 3M|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 3M|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 6M|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD OIS3M 6M|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 6M|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 9M|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD OIS3M 9M|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 9M|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 1Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD OIS3M 1Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 1Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 18M|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD OIS3M 18M|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 18M|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 2Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD OIS3M 2Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 2Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 3Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD OIS3M 3Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 3Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 4Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD OIS3M 4Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 4Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 5Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD OIS3M 5Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 5Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 6Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD OIS3M 6Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 6Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 7Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD OIS3M 7Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 7Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 8Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD OIS3M 8Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 8Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 9Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD OIS3M 9Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 9Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 10Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD OIS3M 10Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 10Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 12Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD OIS3M 12Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 12Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 15Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD OIS3M 15Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 15Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 20Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD OIS3M 20Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 20Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 25Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD OIS3M 25Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 25Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 30Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD OIS3M 30Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD OIS3M 30Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 1Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCHCME 1Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 1Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CMECME 1Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 2Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCHCME 2Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 2Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CMECME 2Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 3Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCHCME 3Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 3Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CMECME 3Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 4Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCHCME 4Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 4Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CMECME 4Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 5Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCHCME 5Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 5Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CMECME 5Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 6Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCHCME 6Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 6Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CMECME 6Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 7Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCHCME 7Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 7Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CMECME 7Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 8Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCHCME 8Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 8Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CMECME 8Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 9Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCHCME 9Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 9Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CMECME 9Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 10Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCHCME 10Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 10Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CMECME 10Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 11Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCHCME 11Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 11Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CMECME 11Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 12Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCHCME 12Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 12Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CMECME 12Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 13Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCHCME 13Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 13Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CMECME 13Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 14Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCHCME 14Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 14Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CMECME 14Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 15Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCHCME 15Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 15Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CMECME 15Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 20Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCHCME 20Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 20Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CMECME 20Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 25Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCHCME 25Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 25Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CMECME 25Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 30Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCHCME 30Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 30Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CMECME 30Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 40Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCHCME 40Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 40Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CMECME 40Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 50Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD SB LCHCME 50Y|8|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB LCHCME 50Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CMECME 50Y|8|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1W|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1W|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1W|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 2W|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 2W|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 2W|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3W|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 3W|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3W|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1M|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 2M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 2M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 2M|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 3M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3M|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 4M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 4M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 4M|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 5M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 5M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 5M|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 6M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 6M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 6M|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 7M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 7M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 7M|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 8M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 8M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 8M|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 9M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 9M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 9M|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 10M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 10M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 10M|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 11M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 11M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 11M|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 1Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 1Y|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 15M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 15M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 15M|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 18M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 18M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 18M|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 21M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 21M|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 21M|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 2Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 2Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 2Y|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 3Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 3Y|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 4Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 4Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 4Y|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 5Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 5Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 5Y|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 6Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 6Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 6Y|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 7Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 7Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 7Y|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 8Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 8Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 8Y|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 9Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 9Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 9Y|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 10Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 10Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 10Y|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 12Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 12Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 12Y|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 15Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 15Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 15Y|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 20Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 20Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 20Y|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 25Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 25Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 25Y|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 30Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 30Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 30Y|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 35Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 35Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 35Y|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 40Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 40Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 40Y|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 45Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 45Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 45Y|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 50Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("12|USD 50Y|7|16|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD 50Y|7|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 2Y 3Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 2Y 3Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 2Y 3Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 2Y 3Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 2Y 3Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 2Y 3Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 2Y 3Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 2Y 4Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 2Y 4Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 2Y 4Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 2Y 4Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 2Y 4Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 2Y 4Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 2Y 4Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 2Y 5Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 2Y 5Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 2Y 5Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 2Y 5Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 2Y 5Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 2Y 5Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 2Y 5Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 2Y 6Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 2Y 6Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 2Y 6Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 2Y 6Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 2Y 6Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 2Y 6Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 2Y 6Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 2Y 7Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 2Y 7Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 2Y 7Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 2Y 7Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 2Y 7Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 2Y 7Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 2Y 7Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 2Y 8Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 2Y 8Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 2Y 8Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 2Y 8Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 2Y 8Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 2Y 8Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 2Y 8Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 2Y 9Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 2Y 9Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 2Y 9Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("8|USD SB CME 2Y 9Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("9|USD SB CME 2Y 9Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("99|USD SB CME 2Y 9Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("97|USD SB CME 2Y 9Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("6|USD SB CME 2Y 10Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("5|USD SB CME 2Y 10Y|12|12|4|NY IRS USD", "d1.0");
        marketDataMap.put("7|USD SB CME 2Y 10Y|12|12|4|NY IRS USD", "d1.0");
    }


    /**
     * List of values that were received when running data manager for short period of time
     *
     * @param values
     */
    public static void initializeValues(Set<String> values) {
        values.add("d1.7461");
        values.add("d1.77494");
        values.add("d1.7787");
        values.add("d1.78094");
        values.add("d1.78494");
        values.add("d1.80965");
        values.add("d1.81565");
        values.add("d1.81965");
        values.add("d1.93862");
        values.add("d1.94462");
        values.add("d1.94862");
        values.add("d2.00479");
        values.add("d2.01079");
        values.add("d2.01479");
        values.add("d19.229");
        values.add("d19.729");
        values.add("d20.229");
        values.add("d28.365");
        values.add("d28.865");
        values.add("d29.365");
        values.add("d37.619");
        values.add("d38.119");
        values.add("d38.619");
        values.add("d46.36");
        values.add("d46.96");
        values.add("d47.56");
        values.add("d54.669");
        values.add("d55.269");
        values.add("d55.869");
        values.add("d62.168");
        values.add("d62.768");
        values.add("d63.368");
        values.add("d1.0626");
        values.add("d1.06095");
        values.add("d1.14852");
        values.add("d1.23567");
        values.add("d1.23643");
        values.add("d1.3204");
        values.add("d1.32097");
        values.add("d1.40127");
        values.add("d1.40162");
        values.add("d1.47449");
        values.add("d1.47465");
        values.add("d1.59667");
        values.add("d1.59674");
        values.add("d1.64727");
        values.add("d1.6492");
        values.add("d1.69302");
        values.add("d1.69818");
        values.add("d1.73374");
        values.add("d1.73596");
        values.add("d1.76994");
        values.add("d1.7697");
        values.add("d1.89567");
        values.add("d1.8955");
        values.add("d1.95928");
        values.add("d1.95919");
        values.add("d1.16136");
        values.add("d1.25241");
        values.add("d1.42255");
        values.add("d1.49722");
        values.add("d1.62075");
        values.add("d1.71809");
        values.add("d1.75967");
        values.add("d16.337327877761535");
        values.add("d18.220429602730846");
        values.add("d12.923962128385323");
        values.add("d11.558110955857787");
        values.add("d10.947560808826744");
        values.add("d15.83444466458392");
        values.add("d15.947930990800263");
        values.add("d31.496876781012595");
        values.add("d32.441908645694646");
        values.add("d31.779012675720665");
        values.add("d32.163619377230106");
        values.add("d32.61940421464124");
        values.add("d32.91922862221754");
        values.add("d32.42377342030214");
        values.add("d33.0181791286607");
        values.add("d33.422138916356786");
        values.add("d33.300611617988025");
        values.add("d1.402283049107984");
        values.add("d1.4187034460546326");
        values.add("d1.979560345674167");
        values.add("d1.6655574220504055");
        values.add("d1.2503631654913507");
        values.add("d1.4918993723353298");
        values.add("d1.4749792796596046");
        values.add("d1.335749819842877");
        values.add("d1.2360988951063583");
        values.add("d1.2507947896691165");
        values.add("d1.0759502912513665");
        values.add("d1.788884199644726");
        values.add("d1.915630022708438");
        values.add("d1.4176769615442049");
        values.add("d1.491406566510303");
        values.add("d1.24458");
        values.add("d1.25058");
        values.add("d1.25458");
        values.add("d1.41219");
        values.add("d1.41819");
        values.add("d1.42219");
        values.add("d1.48565");
        values.add("d1.49165");
        values.add("d1.49565");
        values.add("d1.07728");
        values.add("d1.08495");
        values.add("d1.08328");
        values.add("d1.08728");
        values.add("d1.26108");
        values.add("d1.26686");
        values.add("d1.26708");
        values.add("d1.27108");
        values.add("d1.34932");
        values.add("d1.35475");
        values.add("d1.35532");
        values.add("d1.35932");
        values.add("d1.43269");
        values.add("d1.43818");
        values.add("d1.43869");
        values.add("d1.44269");
        values.add("d1.50815");
        values.add("d1.51391");
        values.add("d1.51415");
        values.add("d1.51815");
        values.add("d1.63299");
        values.add("d1.63892");
        values.add("d1.63899");
        values.add("d1.64299");
        values.add("d1.68652");
        values.add("d1.69056");
        values.add("d1.69252");
        values.add("d1.69652");
        values.add("d1.73652");
        values.add("d1.73731");
        values.add("d1.74252");
        values.add("d1.74652");
        values.add("d1.77541");
        values.add("d1.77917");
        values.add("d1.78141");
        values.add("d1.78541");
        values.add("d1.81014");
        values.add("d1.81638");
        values.add("d1.81614");
        values.add("d1.82014");
        values.add("d1.93896");
        values.add("d1.94513");
        values.add("d1.94496");
        values.add("d1.94896");
        values.add("d2.00497");
        values.add("d2.01106");
        values.add("d2.01097");
        values.add("d2.01497");
        values.add("d19.141");
        values.add("d19.641");
        values.add("d20.141");
        values.add("d37.521");
        values.add("d38.021");
        values.add("d38.521");
        values.add("d46.245");
        values.add("d46.845");
        values.add("d47.445");
        values.add("d54.582");
        values.add("d55.182");
        values.add("d55.782");
        values.add("d62.128");
        values.add("d62.728");
        values.add("d63.328");
        values.add("d1.23589");
        values.add("d1.40178");
        values.add("d1.47474");
        values.add("d1.07149");
        values.add("d1.25198");
        values.add("d1.33918");
        values.add("d1.42153");
        values.add("d1.49674");
        values.add("d1.62099");
        values.add("d1.67199");
        values.add("d1.71851");
        values.add("d1.76013");
        values.add("d1.79715");
        values.add("d1.92487");
        values.add("d1.99046");
        values.add("d1.4012684453631707");
        values.add("d1.4176769615442035");
        values.add("d1.7888841996447247");
        values.add("d1.4914065665103013");
        values.add("d1.4744920628980112");
        values.add("d1.9156300227084377");
        values.add("d1.2356723421868494");
        values.add("d1.2503631654913487");
        values.add("d1.3204001928057378");
        values.add("d1.335749819842876");
        values.add("d1.9592781273492388");
        values.add("d1.769941576724866");
        values.add("d1.9795603456741653");
        values.add("d1.8956728315413243");
        values.add("d1.24436");
        values.add("bfalse");
        values.add("d1.25036");
        values.add("d1.25436");
        values.add("d1.32975");
        values.add("d1.33575");
        values.add("d1.33975");
        values.add("d1.41168");
        values.add("d1.41768");
        values.add("d1.42168");
        values.add("d1.48541");
        values.add("d1.49141");
        values.add("d1.49541");
        values.add("d1.78288");
        values.add("d1.78888");
        values.add("d1.79288");
        values.add("d1.90963");
        values.add("d1.91563");
        values.add("d1.91963");
        values.add("d1.97356");
        values.add("d1.97956");
        values.add("d1.98356");
        values.add("d1.26086");
        values.add("bfalse");
        values.add("d1.26686");
        values.add("d1.27086");
        values.add("d1.34875");
        values.add("d1.35475");
        values.add("d1.35875");
        values.add("d1.43218");
        values.add("d1.43818");
        values.add("d1.44218");
        values.add("d1.50791");
        values.add("d1.51391");
        values.add("d1.51791");
        values.add("d1.81038");
        values.add("d1.81638");
        values.add("d1.82038");
        values.add("d1.93913");
        values.add("d1.94513");
        values.add("d1.94913");
        values.add("d2.00506");
        values.add("d2.01106");
        values.add("d2.01506");
        values.add("d37.499");
        values.add("d37.999");
        values.add("d38.499");
        values.add("d46.188");
        values.add("bfalse");
        values.add("d46.788");
        values.add("d47.388");
        values.add("d54.53");
        values.add("d55.13");
        values.add("d55.73");
        values.add("d62.103");
        values.add("d62.703");
        values.add("d63.303");
        values.add("d1.23567");
        values.add("d1.3204");
        values.add("d1.40127");
        values.add("d1.47449");
        values.add("d1.76994");
        values.add("d1.89567");
        values.add("d1.95928");
        values.add("d100.9765625");
        values.add("d1.0221820660202148");
        values.add("d1.173330141009063");
        values.add("d1.3161096420664753");
        values.add("d-1.4330141009063047");
        values.add("d1.163330141009063");
        values.add("d1.0696820660202149");
        values.add("d1.2561096420664752");
        values.add("d1.15693");
        values.add("d1.16333");
        values.add("d1.16293");
        values.add("d1.16693");
        values.add("d1.24464");
        values.add("d1.25091");
        values.add("d1.25064");
        values.add("d1.25464");
        values.add("d1.4116");
        values.add("d1.41752");
        values.add("d1.4176");
        values.add("d1.4216");
        values.add("d1.48536");
        values.add("d1.49132");
        values.add("d1.49136");
        values.add("d1.49536");
        values.add("d1.60841");
        values.add("d1.61435");
        values.add("d1.61441");
        values.add("d1.61841");
        values.add("d1.71154");
        values.add("d1.16913");
        values.add("d1.17513");
        values.add("d1.17913");
        values.add("d1.26059");
        values.add("d1.26659");
        values.add("d1.27059");
        values.add("d1.43226");
        values.add("d1.43826");
        values.add("d1.44226");
        values.add("d1.50795");
        values.add("d1.51395");
        values.add("d1.51795");
        values.add("d1.63298");
        values.add("d1.63898");
        values.add("d1.64298");
        values.add("d1.73653");
        values.add("d1.74253");
        values.add("d1.74653");
        values.add("d28.325");
        values.add("d28.825");
        values.add("d29.325");
        values.add("d37.471");
        values.add("d37.971");
        values.add("d38.471");
        values.add("d54.538");
        values.add("d55.138");
        values.add("d55.738");
        values.add("d62.108");
        values.add("d62.708");
        values.add("d63.308");
        values.add("d1.14931");
        values.add("d1.14892");
        values.add("d1.23622");
        values.add("d1.23594");
        values.add("d1.40111");
        values.add("d1.40119");
        values.add("d1.4744");
        values.add("d1.47445");
        values.add("d1.59668");
        values.add("d1.59675");
        values.add("d16.33727574773931");
        values.add("d18.220499144964336");
        values.add("d12.92456362489255");
        values.add("d11.557925715579385");
        values.add("d10.947473029965114");
        values.add("d15.834456730160534");
        values.add("d31.49691022811597");
        values.add("d31.92632167134583");
        values.add("d31.833326622877273");
        values.add("d32.60385269756335");
        values.add("d32.91045403392491");
        values.add("d1.2509147146432262");
        values.add("d0.7221472240334754");
        values.add("d1.9154595620993058");
        values.add("d1.4867469792148527");
        values.add("d1.4154165882410166");
        values.add("d2.007629941438784");
        values.add("d1.1633301410090633");
        values.add("d1.3363248160395598");
        values.add("d1.0564087074316573");
        values.add("d1.2516056831620195");
        values.add("d1.6653789997153072");
        values.add("d1.0696820660202226");
        values.add("d1.9794704942227088");
        values.add("d1.149313485136701");
        values.add("d1.163330141009063");
        values.add("d1.1633301410090688");
        values.add("d1.9950040374278903");
        values.add("d1.7886392797065849");
        values.add("d1.4175189760434077");
        values.add("d1.0763885852685078");
        values.add("d1.4913174250838022");
        values.add("d1.06871");
        values.add("d1.07639");
        values.add("d1.07471");
        values.add("d1.07871");
        values.add("d1.15733");
        values.add("d1.16333");
        values.add("d1.16733");
        values.add("d1.24475");
        values.add("d1.25113");
        values.add("d1.25075");
        values.add("d1.25475");
        values.add("d1.33004");
        values.add("d1.33632");
        values.add("d1.33604");
        values.add("d1.34004");
        values.add("d1.41185");
        values.add("d1.41803");
        values.add("d1.41785");
        values.add("d1.42185");
        values.add("d1.48549");
        values.add("d1.49156");
        values.add("d1.49149");
        values.add("d1.49549");
        values.add("d1.60835");
        values.add("d1.61422");
        values.add("d1.61435");
        values.add("d1.61835");
        values.add("d1.66143");
        values.add("d1.66538");
        values.add("d1.66743");
        values.add("d1.67143");
        values.add("d1.71065");
        values.add("d1.71133");
        values.add("d1.71665");
        values.add("d1.72065");
        values.add("d1.74861");
        values.add("d1.75225");
        values.add("d1.75461");
        values.add("d1.75861");
        values.add("d1.78276");
        values.add("d1.78864");
        values.add("d1.78876");
        values.add("d1.79276");
        values.add("d1.90954");
        values.add("d1.91546");
        values.add("d1.91554");
        values.add("d1.91954");
        values.add("d1.97352");
        values.add("d1.97947");
        values.add("d1.97952");
        values.add("d1.98352");
        values.add("d1.07727");
        values.add("d1.08327");
        values.add("d1.08727");
        values.add("d1.17033");
        values.add("d1.17633");
        values.add("d1.17633");
        values.add("d1.18033");
        values.add("d1.26103");
        values.add("d1.26741");
        values.add("d1.26703");
        values.add("d1.27103");
        values.add("d1.34846");
        values.add("d1.35446");
        values.add("d1.35846");
        values.add("d1.43184");
        values.add("d1.43802");
        values.add("d1.43784");
        values.add("d1.44184");
        values.add("d1.50774");
        values.add("d1.51382");
        values.add("d1.51374");
        values.add("d1.51774");
        values.add("d1.63306");
        values.add("d1.63894");
        values.add("d1.63906");
        values.add("d1.64306");
        values.add("d1.6866");
        values.add("d1.6926");
        values.add("d1.6966");
        values.add("d1.73663");
        values.add("d1.74263");
        values.add("d1.74663");
        values.add("d1.77553");
        values.add("d1.77916");
        values.add("d1.78153");
        values.add("d1.78553");
        values.add("d1.81051");
        values.add("d1.81651");
        values.add("d1.82051");
        values.add("d1.93922");
        values.add("d1.94522");
        values.add("d1.94922");
        values.add("d2.00511");
        values.add("d2.01111");
        values.add("d2.01511");
        values.add("d19.14");
        values.add("d19.64");
        values.add("d20.14");
        values.add("d28.446");
        values.add("d28.946");
        values.add("d29.446");
        values.add("d37.516");
        values.add("d38.016");
        values.add("d38.516");
        values.add("d46.159");
        values.add("btrue");
        values.add("d46.759");
        values.add("d47.359");
        values.add("d54.497");
        values.add("d55.097");
        values.add("d55.697");
        values.add("d62.087");
        values.add("d62.687");
        values.add("d63.287");
        values.add("d1.06303");
        values.add("d1.06138");
        values.add("d1.14931");
        values.add("d1.23643");
        values.add("d1.23605");
        values.add("d1.32097");
        values.add("d1.32068");
        values.add("d1.40162");
        values.add("d1.40144");
        values.add("d1.47465");
        values.add("d1.47457");
        values.add("d1.59656");
        values.add("d1.59669");
        values.add("d1.64709");
        values.add("d1.64911");
        values.add("d1.69281");
        values.add("d1.69807");
        values.add("d1.7335");
        values.add("d1.73584");
        values.add("d1.7697");
        values.add("d1.76982");
        values.add("d1.8955");
        values.add("d1.89559");
        values.add("d1.95919");
        values.add("d1.95923");
        values.add("d1.16216");
        values.add("d1.25252");
        values.add("d1.42138");
        values.add("d1.49665");
        values.add("d1.62101");
        values.add("d1.7185");
        values.add("d16.3373898481704");
        values.add("d18.220344377139977");
        values.add("d12.923045731798842");
        values.add("d11.558413359709938");
        values.add("d10.947728614633606");
        values.add("d15.834441326620357");
        values.add("d31.496809183225267");
        values.add("d32.48506917343907");
        values.add("d31.854578539024065");
        values.add("d32.22024088820441");
        values.add("d32.654373412815616");
        values.add("d32.93470813337569");
        values.add("d32.40621529528713");
        values.add("d32.99407760993135");
        values.add("d33.40536893542545");
        values.add("d33.29177244269937");
        values.add("d1.4011122884225575");
        values.add("d1.417518976043406");
        values.add("d1.9794704942227088");
        values.add("d1.6653789997153101");
        values.add("d1.251130524337423");
        values.add("d1.4913174250838");
        values.add("d1.474403932452026");
        values.add("d1.3363248160395638");
        values.add("d1.2362174110525541");
        values.add("d1.2509147146432276");
        values.add("d1.0763885852685153");
        values.add("d1.788639279706588");
        values.add("d1.9154595620993087");
        values.add("d1.4180322083190586");
        values.add("d1.4915638235416475");
        values.add("d0.8784");
        values.add("d0.88627");
        values.add("d0.8844");
        values.add("d0.8884");
        values.add("d0.97639");
        values.add("d0.98451");
        values.add("d0.98239");
        values.add("d0.98639");
        values.add("d1.24501");
        values.add("d1.25111");
        values.add("d1.25101");
        values.add("d1.25501");
        values.add("d1.41178");
        values.add("d1.41804");
        values.add("d1.41778");
        values.add("d1.42178");
        values.add("d1.48544");
        values.add("d1.49157");
        values.add("d1.49144");
        values.add("d1.49544");
        values.add("d0.88103");
        values.add("d0.88703");
        values.add("d0.89103");
        values.add("d0.98132");
        values.add("d0.98732");
        values.add("d0.99132");
        values.add("d1.07771");
        values.add("d1.08539");
        values.add("d1.08371");
        values.add("d1.08771");
        values.add("d1.26153");
        values.add("d1.26763");
        values.add("d1.26753");
        values.add("d1.27153");
        values.add("d1.34904");
        values.add("d1.35532");
        values.add("d1.35504");
        values.add("d1.35904");
        values.add("d1.43227");
        values.add("d1.43853");
        values.add("d1.43827");
        values.add("d1.44227");
        values.add("d1.50794");
        values.add("d1.51406");
        values.add("d1.51394");
        values.add("d1.51794");
        values.add("d1.63294");
        values.add("d1.63881");
        values.add("d1.63894");
        values.add("d1.64294");
        values.add("d1.68643");
        values.add("d1.69038");
        values.add("d1.69243");
        values.add("d1.69643");
        values.add("d1.73641");
        values.add("d1.73709");
        values.add("d1.74241");
        values.add("d1.74641");
        values.add("d1.77529");
        values.add("d1.77893");
        values.add("d1.78129");
        values.add("d1.78529");
        values.add("d1.81026");
        values.add("d1.81614");
        values.add("d1.81626");
        values.add("d1.82026");
        values.add("d1.93904");
        values.add("d1.94496");
        values.add("d1.94504");
        values.add("d1.94904");
        values.add("d2.00502");
        values.add("d2.01097");
        values.add("d2.01102");
        values.add("d2.01502");
        values.add("d9.629");
        values.add("d10.029");
        values.add("d10.429");
        values.add("d19.168");
        values.add("d19.668");
        values.add("d20.168");
        values.add("d28.43");
        values.add("d28.93");
        values.add("d29.43");
        values.add("d37.55");
        values.add("d38.05");
        values.add("d38.55");
        values.add("d46.201");
        values.add("bfalse");
        values.add("d46.801");
        values.add("d47.401");
        values.add("d54.524");
        values.add("d55.124");
        values.add("d55.724");
        values.add("d62.091");
        values.add("d62.691");
        values.add("d63.291");
        values.add("d68.794");
        values.add("d69.994");
        values.add("d0.87555");
        values.add("d0.87371");
        values.add("d0.97277");
        values.add("d0.97068");
        values.add("d1.23641");
        values.add("d1.23631");
        values.add("d1.40163");
        values.add("d1.40137");
        values.add("d1.47453");
        values.add("d1.07192");
        values.add("d1.25274");
        values.add("d1.33975");
        values.add("d1.42188");
        values.add("d1.49689");
        values.add("d1.62088");
        values.add("d1.67182");
        values.add("d1.71829");
        values.add("d1.7599");
        values.add("d1.79691");
        values.add("d1.9247");
        values.add("d1.99037");
        values.add("d16.34785516402264");
        values.add("d18.205052933696898");
        values.add("d12.922208675598062");
        values.add("d11.558693263926134");
        values.add("d10.947885989379868");
        values.add("d29.15803372515033");
        values.add("d30.03149101057759");
        values.add("d31.45516683427522");
        values.add("d31.852250225032687");
        values.add("d32.65515329048248");
        values.add("d32.93514816110618");
        values.add("d1.4016195804309102");
        values.add("d1.4180322083190608");
        values.add("d0.8862667213011691");
        values.add("d1.2511068806938568");
        values.add("d1.7886392797065898");
        values.add("d1.4915638235416486");
        values.add("d1.474647536428679");
        values.add("d0.9846076491306449");
        values.add("d1.91545956209931");
        values.add("d1.7512266365566302");
        values.add("d0.7238234828501028");
        values.add("d1.9153942846925192");
        values.add("d1.5861248544970512");
        values.add("d1.0741965262872717");
        values.add("d1.4867931160732228");
        values.add("d1.236430685145757");
        values.add("d1.768450302710522");
        values.add("d1.251130524337424");
        values.add("d1.3209685814947683");
        values.add("d1.336324816039567");
        values.add("d1.6032481983432996");
        values.add("d1.9591891964995514");
        values.add("d1.6633115540450314");
        values.add("d1.4154936362947623");
        values.add("d1.1605123801515635");
        values.add("d2.007656943795483");
        values.add("d1.2443073481167102");
        values.add("d1.5429342187244763");
        values.add("d1.6987191597670173");
        values.add("d0.8862667213011691");
        values.add("d1.3364138616789527");
        values.add("d1.2516954950088566");
        values.add("d1.7221063675450887");
        values.add("d1.6653025741659255");
        values.add("d1.3227003415605616");
        values.add("d1.5663141384490158");
        values.add("d1.9794437743929714");
        values.add("d0.9845140865222918");
        values.add("d1.7696992502614983");
        values.add("d1.389677497295859");
        values.add("d1.9794704942227095");
        values.add("d1.9950502758094812");
        values.add("d1.8955041468048457");
        values.add("d1.4816195336922091");
        values.add("d1.7885268685915856");
        values.add("d1.0761337631587093");
        values.add("d1.440772850484035");
        values.add("d1.5149109072760953");
        values.add("d0.9846076491306449");
        values.add("d1.06852");
        values.add("d1.07613");
        values.add("d1.07452");
        values.add("d1.07852");
        values.add("d1.24518");
        values.add("d1.25122");
        values.add("d1.25118");
        values.add("d1.25518");
        values.add("d1.33037");
        values.add("d1.33641");
        values.add("d1.33637");
        values.add("d1.34037");
        values.add("d1.41207");
        values.add("d1.4181");
        values.add("d1.41807");
        values.add("d1.42207");
        values.add("d1.48558");
        values.add("d1.4916");
        values.add("d1.49158");
        values.add("d1.49558");
        values.add("d1.60833");
        values.add("d1.61418");
        values.add("d1.61433");
        values.add("d1.61833");
        values.add("d1.66139");
        values.add("d1.6653");
        values.add("d1.66739");
        values.add("d1.67139");
        values.add("d1.7106");
        values.add("d1.71123");
        values.add("d1.7166");
        values.add("d1.7206");
        values.add("d1.74856");
        values.add("d1.75214");
        values.add("d1.75456");
        values.add("d1.75856");
        values.add("d1.78258");
        values.add("d1.78853");
        values.add("d1.78858");
        values.add("d1.79258");
        values.add("d1.90943");
        values.add("d1.91539");
        values.add("d1.91543");
        values.add("d1.91943");
        values.add("d1.97346");
        values.add("d1.97944");
        values.add("d1.97946");
        values.add("d1.98346");
        values.add("d0.8804");
        values.add("d0.88827");
        values.add("d0.8864");
        values.add("d0.8904");
        values.add("d0.98089");
        values.add("d0.98901");
        values.add("d0.98689");
        values.add("d0.99089");
        values.add("d1.07778");
        values.add("d1.08378");
        values.add("d1.08778");
        values.add("d1.26156");
        values.add("d1.26761");
        values.add("d1.26756");
        values.add("d1.27156");
        values.add("d1.34928");
        values.add("d1.35528");
        values.add("d1.35928");
        values.add("d1.43251");
        values.add("d1.43854");
        values.add("d1.43851");
        values.add("d1.44251");
        values.add("d1.50805");
        values.add("d1.51407");
        values.add("d1.51405");
        values.add("d1.51805");
        values.add("d1.63296");
        values.add("d1.63896");
        values.add("d1.64296");
        values.add("d1.68646");
        values.add("d1.69246");
        values.add("d1.69646");
        values.add("d1.73646");
        values.add("d1.74246");
        values.add("d1.74646");
        values.add("d1.77535");
        values.add("d1.78135");
        values.add("d1.78535");
        values.add("d1.8102");
        values.add("d1.8162");
        values.add("d1.8202");
        values.add("d1.93899");
        values.add("d1.94499");
        values.add("d1.94899");
        values.add("d2.00498");
        values.add("d2.01098");
        values.add("d2.01498");
        values.add("d9.649");
        values.add("d10.049");
        values.add("d10.449");
        values.add("d19.237");
        values.add("d19.737");
        values.add("d20.237");
        values.add("d28.493");
        values.add("d28.993");
        values.add("d29.493");
        values.add("d37.616");
        values.add("d38.116");
        values.add("d38.616");
        values.add("d46.288");
        values.add("btrue");
        values.add("d46.888");
        values.add("d47.488");
        values.add("d54.611");
        values.add("d55.211");
        values.add("d55.811");
        values.add("d62.165");
        values.add("d62.765");
        values.add("d63.365");
        values.add("d68.857");
        values.add("d70.057");
        values.add("d1.06278");
        values.add("d1.06119");
        values.add("d1.23652");
        values.add("d1.23648");
        values.add("d1.32106");
        values.add("d1.32101");
        values.add("d1.40169");
        values.add("d1.40165");
        values.add("d1.47468");
        values.add("d1.47467");
        values.add("d1.59652");
        values.add("d1.59667");
        values.add("d1.64701");
        values.add("d1.64908");
        values.add("d1.69271");
        values.add("d1.69802");
        values.add("d1.73339");
        values.add("d1.73579");
        values.add("d1.76959");
        values.add("d1.76964");
        values.add("d1.89544");
        values.add("d1.89547");
        values.add("d1.95916");
        values.add("d1.95918");
        values.add("d0.87753");
        values.add("d0.97722");
        values.add("d1.25271");
        values.add("d1.42189");
        values.add("d1.4969");
        values.add("d16.34779234219295");
        values.add("d18.20513833129007");
        values.add("d12.92306541018162");
        values.add("d11.558407238817894");
        values.add("d10.947725826306243");
        values.add("d31.455223351441383");
        values.add("d32.459975842684415");
        values.add("d31.86357524435357");
        values.add("d32.22900946559134");
        values.add("d32.660919143067126");
        values.add("d32.93831131043179");
        values.add("d32.398694435582144");
        values.add("d32.983015715116785");
        values.add("d33.398946918792184");
        values.add("d33.28914386792487");
        values.add("d1.9794437743929714");
        values.add("d1.665302574165922");
        values.add("d1.2512218843923248");
        values.add("d1.3364138616789523");
        values.add("d1.2364073192971508");
        values.add("d1.2511068806938543");
        values.add("d1.076133763158711");
        values.add("d1.7885268685915827");
        values.add("d1.9153942846925176");
        values.add("d1.4180987053988408");
        values.add("d1.49160042837506");
        values.add("bfalse");
        values.add("d1.24516");
        values.add("d1.25116");
        values.add("d1.25516");
        values.add("d1.07752");
        values.add("d1.08513");
        values.add("bfalse");
        values.add("d1.08352");
        values.add("d1.08752");
        values.add("d1.26166");
        values.add("d1.26772");
        values.add("d1.26766");
        values.add("d1.27166");
        values.add("d1.34937");
        values.add("d1.35541");
        values.add("d1.35537");
        values.add("d1.35937");
        values.add("d1.43257");
        values.add("d1.4386");
        values.add("d1.43857");
        values.add("d1.44257");
        values.add("d1.50808");
        values.add("d1.5141");
        values.add("d1.51408");
        values.add("d1.51808");
        values.add("d1.63292");
        values.add("d1.63877");
        values.add("d1.63892");
        values.add("d1.64292");
        values.add("d1.68639");
        values.add("d1.6903");
        values.add("d1.69239");
        values.add("d1.69639");
        values.add("d1.73637");
        values.add("d1.73699");
        values.add("d1.74237");
        values.add("d1.74637");
        values.add("d1.77524");
        values.add("d1.77882");
        values.add("d1.78124");
        values.add("d1.78524");
        values.add("d1.81008");
        values.add("d1.81603");
        values.add("d1.81608");
        values.add("d1.82008");
        values.add("d1.93893");
        values.add("d1.94489");
        values.add("d1.94493");
        values.add("d1.94893");
        values.add("d2.00496");
        values.add("d2.01094");
        values.add("d2.01096");
        values.add("d2.01496");
        values.add("d19.212");
        values.add("d19.712");
        values.add("d20.212");
        values.add("d37.626");
        values.add("d38.126");
        values.add("d38.626");
        values.add("d46.297");
        values.add("d46.897");
        values.add("d47.497");
        values.add("d54.617");
        values.add("d55.217");
        values.add("d55.817");
        values.add("d62.168");
        values.add("d62.768");
        values.add("d63.368");
        values.add("d1.23646");
        values.add("d1.40166");
        values.add("d1.07167");
        values.add("d1.25283");
        values.add("d1.33984");
        values.add("d1.42195");
        values.add("d1.49693");
        values.add("d1.62084");
        values.add("d1.67174");
        values.add("d1.71819");
        values.add("d1.75979");
        values.add("d1.7968");
        values.add("d1.92463");
        values.add("d1.99034");
        values.add("d1.401685307858342");
        values.add("d1.4180987053988459");
        values.add("d1.7885268685915858");
        values.add("d1.4916004283750643");
        values.add("d1.474683726115346");
        values.add("d1.9153942846925212");
        values.add("d1.2365209717889811");
        values.add("d1.2512218843923264");
        values.add("d1.3210566038756577");
        values.add("d1.336413861678954");
        values.add("d1.9591627504363742");
        values.add("d1.7695880294758426");
        values.add("d1.979443774392975");
        values.add("d1.8954395494634506");
        values.add("d1.24522");
        values.add("d1.25122");
        values.add("d1.25522");
        values.add("d1.33041");
        values.add("d1.33641");
        values.add("d1.34041");
        values.add("d1.4121");
        values.add("d1.4181");
        values.add("d1.4221");
        values.add("d1.4856");
        values.add("d1.4916");
        values.add("d1.4956");
        values.add("d1.78253");
        values.add("d1.78853");
        values.add("d1.79253");
        values.add("d1.90939");
        values.add("d1.91539");
        values.add("d1.91939");
        values.add("d1.97344");
        values.add("d1.97944");
        values.add("d1.98344");
        values.add("d1.26172");
        values.add("d1.26772");
        values.add("d1.27172");
        values.add("d1.34941");
        values.add("d1.35541");
        values.add("d1.35941");
        values.add("d1.4326");
        values.add("d1.4386");
        values.add("d1.4426");
        values.add("d1.5081");
        values.add("d1.5141");
        values.add("d1.5181");
        values.add("d1.81003");
        values.add("d1.81603");
        values.add("d1.82003");
        values.add("d1.93889");
        values.add("d1.94489");
        values.add("d1.94889");
        values.add("d2.00494");
        values.add("d2.01094");
        values.add("d2.01494");
        values.add("d37.632");
        values.add("d38.132");
        values.add("d38.632");
        values.add("d46.301");
        values.add("d46.901");
        values.add("d47.501");
        values.add("d54.62");
        values.add("d55.22");
        values.add("d55.82");
        values.add("d62.17");
        values.add("d62.77");
        values.add("d63.37");
        values.add("d1.23652");
        values.add("d1.32106");
        values.add("d1.40169");
        values.add("d1.47468");
        values.add("d1.76959");
        values.add("d1.89544");
        values.add("d1.95916");
        values.add("btrue");
        values.add("d100.98046875");
        values.add("d1.0217809273615963");
        values.add("d1.1725278636918262");
        values.add("d1.3157085034078568");
        values.add("d-1.3527863691826125");
        values.add("d1.1625278636918261");
        values.add("d1.0692809273615964");
        values.add("d1.2557085034078568");
        values.add("d1.15693");
        values.add("d1.16253");
        values.add("d1.16293");
        values.add("d1.16693");
        values.add("d1.24495");
        values.add("d1.25067");
        values.add("d1.25095");
        values.add("d1.25495");
        values.add("d1.41218");
        values.add("d1.41826");
        values.add("d1.41818");
        values.add("d1.42218");
        values.add("d1.48564");
        values.add("d1.49169");
        values.add("d1.49164");
        values.add("d1.49564");
        values.add("d1.60832");
        values.add("d1.61417");
        values.add("d1.61432");
        values.add("d1.61832");
        values.add("d1.71061");
        values.add("d1.71124");
        values.add("d1.71661");
        values.add("d1.72061");
        values.add("d1.17073");
        values.add("d1.17673");
        values.add("d1.18073");
        values.add("d1.262");
        values.add("btrue");
        values.add("d1.268");
        values.add("d1.272");
        values.add("d1.43252");
        values.add("d1.43852");
        values.add("d1.44252");
        values.add("d1.50806");
        values.add("d1.51406");
        values.add("d1.51806");
        values.add("d1.63293");
        values.add("d1.63893");
        values.add("d1.64293");
        values.add("d1.73636");
        values.add("d1.74236");
        values.add("d1.74636");
        values.add("d1.77523");
        values.add("d1.78123");
        values.add("d1.78523");
        values.add("d28.533");
        values.add("d29.033");
        values.add("d29.533");
        values.add("d37.66");
        values.add("d38.16");
        values.add("d38.66");
        values.add("d54.612");
        values.add("d55.212");
        values.add("d55.812");
        values.add("d62.165");
        values.add("d62.765");
        values.add("d63.365");
        values.add("d1.14852");
        values.add("d1.14892");
        values.add("d1.23598");
        values.add("d1.23625");
        values.add("d1.40184");
        values.add("d1.40176");
        values.add("d1.47477");
        values.add("d1.47473");
        values.add("d1.59651");
        values.add("d1.59666");
        values.add("d1.69272");
        values.add("d1.69803");
        values.add("d1.7334");
        values.add("d16.3478444722903");
        values.add("d18.205068788912506");
        values.add("d12.92246390394026");
        values.add("d11.558592478784792");
        values.add("d10.947813604745631");
        values.add("d15.83442787519995");
        values.add("d31.455189904294237");
        values.add("d31.8473164954549");
        values.add("d31.809261155871763");
        values.add("d32.67647058093464");
        values.add("d32.94708583678759");
        values.add("d1.2506703338053153");
        values.add("d0.7224676500909316");
        values.add("d1.9155647453016518");
        values.add("d1.4866175818082366");
        values.add("d1.4151230286209915");
        values.add("d2.0075924056793517");
        values.add("d1.1625278636918268");
        values.add("d1.335838865482268");
        values.add("d1.0560125463803267");
        values.add("d1.2509247358599003");
        values.add("d1.6654809965010253");
        values.add("d1.0692809273615929");
        values.add("d1.97953362584443");
        values.add("d1.1485208742457504");
        values.add("d1.1625278636918261");
        values.add("d1.1625278636918188");
        values.add("d1.9949486496772706");
        values.add("d1.7887717885297278");
        values.add("d1.418256690094949");
        values.add("d1.0756954691415648");
        values.add("d1.4916895691723415");
        values.add("d0.9764");
        values.add("d0.98452");
        values.add("d0.9824");
        values.add("d0.9864");
        values.add("d1.06809");
        values.add("d1.0757");
        values.add("d1.07409");
        values.add("d1.07809");
        values.add("d1.15653");
        values.add("d1.16253");
        values.add("d1.16653");
        values.add("d1.24484");
        values.add("d1.25045");
        values.add("d1.25084");
        values.add("d1.25484");
        values.add("d1.33013");
        values.add("d1.33584");
        values.add("d1.33613");
        values.add("d1.34013");
        values.add("d1.41192");
        values.add("d1.41774");
        values.add("d1.41792");
        values.add("d1.42192");
        values.add("d1.48552");
        values.add("d1.49144");
        values.add("d1.49152");
        values.add("d1.49552");
        values.add("d1.60838");
        values.add("d1.61429");
        values.add("d1.61438");
        values.add("d1.61838");
        values.add("d1.66148");
        values.add("d1.66548");
        values.add("d1.66748");
        values.add("d1.67148");
        values.add("d1.71071");
        values.add("d1.71145");
        values.add("d1.71671");
        values.add("d1.72071");
        values.add("d1.74868");
        values.add("d1.75238");
        values.add("d1.75468");
        values.add("d1.75868");
        values.add("d1.78265");
        values.add("d1.78877");
        values.add("d1.78865");
        values.add("d1.79265");
        values.add("d1.90948");
        values.add("d1.91556");
        values.add("d1.91548");
        values.add("d1.91948");
        values.add("d1.97349");
        values.add("d1.97953");
        values.add("d1.97949");
        values.add("d1.98349");
        values.add("d1.07753");
        values.add("d1.08353");
        values.add("d1.08753");
        values.add("d1.16953");
        values.add("d1.17553");
        values.add("d1.17553");
        values.add("d1.17953");
        values.add("d1.26155");
        values.add("d1.26717");
        values.add("d1.26755");
        values.add("d1.27155");
        values.add("d1.3497");
        values.add("d1.3557");
        values.add("d1.3597");
        values.add("d1.43293");
        values.add("d1.43876");
        values.add("d1.43893");
        values.add("d1.44293");
        values.add("d1.50827");
        values.add("d1.51419");
        values.add("d1.51427");
        values.add("d1.51827");
        values.add("d1.63285");
        values.add("d1.63876");
        values.add("d1.63885");
        values.add("d1.64285");
        values.add("d1.6863");
        values.add("d1.6923");
        values.add("d1.6963");
        values.add("d1.73626");
        values.add("d1.737");
        values.add("d1.74226");
        values.add("d1.74626");
        values.add("d1.77512");
        values.add("d1.78112");
        values.add("d1.78512");
        values.add("d1.8099");
        values.add("d1.8159");
        values.add("d1.8199");
        values.add("d1.93881");
        values.add("d1.94481");
        values.add("d1.94881");
        values.add("d2.0049");
        values.add("d2.0109");
        values.add("d2.0149");
        values.add("d19.213");
        values.add("d19.713");
        values.add("d20.213");
        values.add("d28.413");
        values.add("d28.913");
        values.add("d29.413");
        values.add("d37.615");
        values.add("d38.115");
        values.add("d38.615");
        values.add("d46.33");
        values.add("d46.93");
        values.add("d47.53");
        values.add("d54.653");
        values.add("d55.253");
        values.add("d55.853");
        values.add("d62.187");
        values.add("d62.787");
        values.add("d63.387");
        values.add("d1.06235");
        values.add("d1.06076");
        values.add("d1.14852");
        values.add("d1.23576");
        values.add("d1.23614");
        values.add("d1.32049");
        values.add("d1.32077");
        values.add("d1.40133");
        values.add("d1.40151");
        values.add("d1.47453");
        values.add("d1.47461");
        values.add("d1.59663");
        values.add("d1.59672");
        values.add("d1.64719");
        values.add("d1.64917");
        values.add("d1.69293");
        values.add("d1.69813");
        values.add("d1.73363");
        values.add("d1.7359");
        values.add("d1.76983");
        values.add("d1.76971");
        values.add("d1.89561");
        values.add("d1.89552");
        values.add("d1.95925");
        values.add("d1.95921");
        values.add("d1.16136");
        values.add("d1.25228");
        values.add("d1.4221");
        values.add("d1.49702");
        values.add("d1.62083");
        values.add("d1.7182");
        values.add("d16.347730371785314");
        values.add("d18.20522355690307");
        values.add("d12.923981806806921");
        values.add("d11.55810483514888");
        values.add("d10.947558020610273");
        values.add("d15.834443278535536");
        values.add("d31.45529094919006");
        values.add("d32.4168153149398");
        values.add("d31.788009393339408");
        values.add("d32.17238795461696");
        values.add("d32.625949940948416");
        values.add("d32.92283179754298");
        values.add("d32.416252560598025");
        values.add("d33.00711723384693");
        values.add("d33.41571689972408");
        values.add("d33.297983043213684");
        values.add("d1.401841464003569");
        values.add("d1.4182566900949434");
        values.add("d1.9795336258444294");
        values.add("d1.6654809965010269");
        values.add("d1.2504545256710475");
        values.add("d1.4916895691723375");
        values.add("d1.474771855939239");
        values.add("d1.3358388654822644");
        values.add("d1.2359759015050062");
        values.add("d1.2506703338053153");
        values.add("d1.0756954691415603");
        values.add("d1.7887717885297292");
        values.add("d1.9155647453016522");
        values.add("d1.4177434585839168");
        values.add("d1.4914431713261336");
        values.add("d1.24456");
        values.add("d1.25056");
        values.add("d1.25456");
        values.add("d1.412");
        values.add("d1.418");
        values.add("d1.422");
        values.add("d1.48557");
        values.add("d1.49157");
        values.add("d1.49557");
        values.add("d0.9809");
        values.add("d0.98902");
        values.add("d0.9869");
        values.add("d0.9909");
        values.add("d1.07709");
        values.add("d1.0847");
        values.add("d1.08309");
        values.add("d1.08709");
        values.add("d1.26106");
        values.add("d1.26695");
        values.add("d1.26706");
        values.add("d1.27106");
        values.add("d1.34913");
        values.add("d1.35484");
        values.add("d1.35513");
        values.add("d1.35913");
        values.add("d1.4325");
        values.add("d1.43824");
        values.add("d1.4385");
        values.add("d1.4425");
        values.add("d1.50807");
        values.add("d1.51394");
        values.add("d1.51407");
        values.add("d1.51807");
        values.add("d1.63297");
        values.add("d1.63888");
        values.add("d1.63897");
        values.add("d1.64297");
        values.add("d1.68648");
        values.add("d1.69048");
        values.add("d1.69248");
        values.add("d1.69648");
        values.add("d1.73648");
        values.add("d1.73721");
        values.add("d1.74248");
        values.add("d1.74648");
        values.add("d1.77536");
        values.add("d1.77906");
        values.add("d1.78136");
        values.add("d1.78536");
        values.add("d1.81015");
        values.add("d1.81627");
        values.add("d1.81615");
        values.add("d1.82015");
        values.add("d1.93898");
        values.add("d1.94506");
        values.add("d1.94498");
        values.add("d1.94898");
        values.add("d2.00499");
        values.add("d2.01103");
        values.add("d2.01099");
        values.add("d2.01499");
        values.add("d19.169");
        values.add("d19.669");
        values.add("d20.169");
        values.add("d37.566");
        values.add("d38.066");
        values.add("d38.566");
        values.add("d46.273");
        values.add("d46.873");
        values.add("d47.473");
        values.add("d54.61");
        values.add("d55.21");
        values.add("d55.81");
        values.add("d62.167");
        values.add("d62.767");
        values.add("d63.367");
        values.add("d1.23587");
        values.add("d1.40159");
        values.add("d1.47465");
        values.add("d1.07124");
        values.add("d1.25207");
        values.add("d1.33927");
        values.add("d1.4216");
        values.add("d1.49677");
        values.add("d1.62095");
        values.add("d1.67192");
        values.add("d1.71841");
        values.add("d1.76002");
        values.add("d1.79704");
        values.add("d1.9248");
        values.add("d1.99043");
        values.add("d1.4013341727509894");
        values.add("d1.4177434585839115");
        values.add("d1.7887717885297263");
        values.add("d1.4914431713261302");
        values.add("d1.474528252567291");
        values.add("d1.9155647453016516");
        values.add("d1.2357626289533992");
        values.add("d1.2504545256710426");
        values.add("d1.3204882151866237");
        values.add("d1.3358388654822597");
        values.add("d1.959251681286058");
        values.add("d1.7698303559392157");
        values.add("d1.9795336258444274");
        values.add("d1.895608234199932");
        values.add("d1.24445");
        values.add("d1.25045");
        values.add("d1.25445");
        values.add("d1.32984");
        values.add("d1.33584");
        values.add("d1.33984");
        values.add("d1.41174");
        values.add("d1.41774");
        values.add("d1.42174");
        values.add("d1.48544");
        values.add("d1.49144");
        values.add("d1.49544");
        values.add("d1.78277");
        values.add("d1.78877");
        values.add("d1.79277");
        values.add("d1.90956");
        values.add("d1.91556");
        values.add("d1.91956");
        values.add("d1.97353");
        values.add("d1.97953");
        values.add("d1.98353");
        values.add("d1.26095");
        values.add("d1.26695");
        values.add("d1.27095");
        values.add("d1.34884");
        values.add("d1.35484");
        values.add("d1.35884");
        values.add("d1.43224");
        values.add("d1.43824");
        values.add("d1.44224");
        values.add("d1.50794");
        values.add("d1.51394");
        values.add("d1.51794");
        values.add("d1.81027");
        values.add("d1.81627");
        values.add("d1.82027");
        values.add("d1.93906");
        values.add("d1.94506");
        values.add("d1.94906");
        values.add("d2.00503");
        values.add("d2.01103");
        values.add("d2.01503");
        values.add("d37.555");
        values.add("d38.055");
        values.add("d38.555");
        values.add("d46.244");
        values.add("d46.844");
        values.add("d47.444");
        values.add("d54.584");
        values.add("d55.184");
        values.add("d55.784");
        values.add("d62.154");
        values.add("d62.754");
        values.add("d63.354");
        values.add("d1.23576");
        values.add("d1.32049");
        values.add("d1.40133");
        values.add("d1.47453");
        values.add("d1.76983");
        values.add("d1.89561");
        values.add("d1.95925");
    }


    /**
     * Update randomly picked key with randomly picked value
     *
     * @param keys
     * @param marketDataMap
     * @param valueList
     */
    public static void randomUpdate(List<String> keys, Map<String, String> marketDataMap, List<String> valueList) {
        int randomKeyInt = _random.nextInt(keys.size());
        int randomValueInt = _random.nextInt(valueList.size());
        marketDataMap.put(keys.get(randomKeyInt), valueList.get(randomValueInt));
    }
}
